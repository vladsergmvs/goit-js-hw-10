{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n//////////////////////////////////////////////////////////////\n\nconst startTimerBtn = document.querySelector('button[data-start]'),\n      allValuesContainerTimer = document.querySelectorAll('.timer .value'),\n       inputDate = document.querySelector('#datetime-picker');\n  \n\n//////////////////////////////////////////////////////////////\nlet userSelectedDate;\nstartTimerBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    userSelectedDate >= Date.now() ? (startTimerBtn.disabled = false) : iziToast.error({\n          title: 'Error',\n          message: 'Please choose a date in the future',\n        });\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartTimerBtn.addEventListener('click', event => {\n  startTimerBtn.disabled = true;\n  inputDate.disabled = true;\n  let RemainingTime = 0;\n\n  const timerInterval = setInterval(() => {\n    RemainingTime = convertMs(userSelectedDate - Date.now());\n    for (let i = 0; i < allValuesContainerTimer.length; i++) {\n      allValuesContainerTimer[i].textContent = String(\n        Object.values(RemainingTime)[i]\n      ).padStart(2, '0');\n    }\n\n    if (userSelectedDate - Date.now() <= 0) {\n      clearInterval(timerInterval);\n      document.querySelector('#datetime-picker').disabled = false;\n      for (let i = 0; i < allValuesContainerTimer.length; i++) {\n        allValuesContainerTimer[i].textContent = '00';\n      }\n      iziToast.success({\n        title: 'Done',\n        message: 'The countdown has finished!',\n      });\n    }\n  }, 1000);\n});\n"],"names":["startTimerBtn","allValuesContainerTimer","inputDate","userSelectedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","event","RemainingTime","timerInterval","i"],"mappings":"+IAWA,MAAMA,EAAgB,SAAS,cAAc,oBAAoB,EAC3DC,EAA0B,SAAS,iBAAiB,eAAe,EAClEC,EAAY,SAAS,cAAc,kBAAkB,EAI5D,IAAIC,EACJH,EAAc,SAAW,GAEzB,MAAMI,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAClCF,GAAoB,KAAK,MAASH,EAAc,SAAW,GAASM,EAAS,MAAM,CAC7E,MAAO,QACP,QAAS,oCACnB,CAAS,CACN,CACH,EAEAC,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAb,EAAc,iBAAiB,QAASc,GAAS,CAC/Cd,EAAc,SAAW,GACzBE,EAAU,SAAW,GACrB,IAAIa,EAAgB,EAEpB,MAAMC,EAAgB,YAAY,IAAM,CACtCD,EAAgBP,EAAUL,EAAmB,KAAK,IAAK,CAAA,EACvD,QAASc,EAAI,EAAGA,EAAIhB,EAAwB,OAAQgB,IAClDhB,EAAwBgB,CAAC,EAAE,YAAc,OACvC,OAAO,OAAOF,CAAa,EAAEE,CAAC,CACtC,EAAQ,SAAS,EAAG,GAAG,EAGnB,GAAId,EAAmB,KAAK,IAAG,GAAM,EAAG,CACtC,cAAca,CAAa,EAC3B,SAAS,cAAc,kBAAkB,EAAE,SAAW,GACtD,QAASC,EAAI,EAAGA,EAAIhB,EAAwB,OAAQgB,IAClDhB,EAAwBgB,CAAC,EAAE,YAAc,KAE3CX,EAAS,QAAQ,CACf,MAAO,OACP,QAAS,6BACjB,CAAO,CACF,CACF,EAAE,GAAI,CACT,CAAC"}
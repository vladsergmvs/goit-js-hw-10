{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n//////////////////////////////////////////////////////////////\n\nconst startTimerBtn = document.querySelector('button[data-start]'),\n  allValuesContainerTimer = document.querySelectorAll('.timer .value'),\n  inputDate = document.querySelector('#datetime-picker');\n\n//////////////////////////////////////////////////////////////\nlet userSelectedDate;\nstartTimerBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    userSelectedDate.getTime() >= Date.now()\n      ? (startTimerBtn.disabled = false)\n      : window.alert('Please choose a date in the future');\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartTimerBtn.addEventListener('click', event => {\n  startTimerBtn.disabled = true;\n  inputDate.disabled = true;\n  let remainOfTime = 0;\n  const timerInterval = setInterval(() => {\n    remainOfTime = convertMs(userSelectedDate.getTime() - Date.now());\n    for (let i = 0; i < allValuesContainerTimer.length; i++) {\n      allValuesContainerTimer[i].textContent = String(\n        Object.values(remainOfTime)[i]\n      ).padStart(2, '0');\n    }\n\n    if (remainOfTime <= 0) {\n      clearInterval(timerInterval);\n      startTimerBtn.removeEventListener('click');\n      inputDate.disabled = false;\n    }\n  }, 1000);\n});\n"],"names":["startTimerBtn","allValuesContainerTimer","inputDate","userSelectedDate","options","selectedDates","flatpickr","convertMs","ms","days","hours","minutes","seconds","event","remainOfTime","timerInterval","i"],"mappings":"0xBAWA,MAAMA,EAAgB,SAAS,cAAc,oBAAoB,EAC/DC,EAA0B,SAAS,iBAAiB,eAAe,EACnEC,EAAY,SAAS,cAAc,kBAAkB,EAGvD,IAAIC,EACJH,EAAc,SAAW,GAEzB,MAAMI,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAClCF,EAAiB,QAAO,GAAM,KAAK,IAAK,EACnCH,EAAc,SAAW,GAC1B,OAAO,MAAM,oCAAoC,CACtD,CACH,EAEAM,EAAU,mBAAoBF,CAAO,EAErC,SAASG,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEAZ,EAAc,iBAAiB,QAASa,GAAS,CAC/Cb,EAAc,SAAW,GACzBE,EAAU,SAAW,GACrB,IAAIY,EAAe,EACnB,MAAMC,EAAgB,YAAY,IAAM,CACtCD,EAAeP,EAAUJ,EAAiB,QAAS,EAAG,KAAK,IAAG,CAAE,EAChE,QAASa,EAAI,EAAGA,EAAIf,EAAwB,OAAQe,IAClDf,EAAwBe,CAAC,EAAE,YAAc,OACvC,OAAO,OAAOF,CAAY,EAAEE,CAAC,CACrC,EAAQ,SAAS,EAAG,GAAG,EAGfF,GAAgB,IAClB,cAAcC,CAAa,EAC3Bf,EAAc,oBAAoB,OAAO,EACzCE,EAAU,SAAW,GAExB,EAAE,GAAI,CACT,CAAC"}